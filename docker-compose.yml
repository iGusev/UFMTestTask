version: '3'

services:
    nginx:
        container_name: '${APP_NAME}_nginx'
        build:
            context: ./vendor/nginx
            dockerfile: Dockerfile
            args:
                WWW_USER: '${WWW_USER}'
                WWW_GROUP: '${WWW_GROUP}'
        ports:
            - '${NGINX_HOST_HTTP_PORT}:80'
        volumes:
          - '.:/var/www/html'
        depends_on:
            - mysql
            - php-fpm
        networks:
            - ifm
    mysql:
        container_name: '${APP_NAME}_mysql'
        hostname: mysql
        build:
            context: ./vendor/mysql
            dockerfile: Dockerfile
            args:
                MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
                MYSQL_DATABASE: '${DB_DATABASE}'
                MYSQL_USER: '${DB_USERNAME}'
                MYSQL_PASSWORD: '${DB_PASSWORD}'
                MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
                TZ: '${DB_TIMEZONE}'
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - '${DB_PORT}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - ${MYSQL_DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ./vendor/mysql/conf.d:/etc/mysql/conf.d/
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        networks:
            - ifm
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-p${DB_ROOT_PASSWORD}"]
          retries: 3
          timeout: 5s
    php-fpm:
        container_name: '${APP_NAME}_php-fpm'
        hostname: fpm
        build:
            context: ./vendor/php-fpm
            dockerfile: Dockerfile
        volumes:
            - '.:/var/www/html'
        networks:
            - ifm
networks:
    ifm:
        driver: bridge
volumes:
    mysql:
        driver: local
